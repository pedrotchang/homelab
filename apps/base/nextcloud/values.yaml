# Nextcloud Configuration with Redis Authentication
replicaCount: 1

image:
  repository: nextcloud
  flavor: apache
  pullPolicy: IfNotPresent

ingress:
  enabled: false 

nextcloud:
  host: nextcloud.seyzahl.com
  username: admin
  existingSecret:
    enabled: true
    secretName: nextcloud-admin-creds
    usernameKey: username
    passwordKey: password
    
  strategy:
    type: Recreate
    
  # PHP configuration for large files
  phpConfigs:
    uploadLimit.ini: |
      upload_max_filesize = 16G
      post_max_size = 16G
      max_input_time = 3600
      max_execution_time = 3600
      memory_limit = 2G
      
  # Default configs - disable conflicting defaults
  defaultConfigs:
    autoconfig.php: false
    postgres.config.php: false
    redis.config.php: false
    
  # Additional Nextcloud configs
  configs:
    proxy.config.php: |-
      <?php
      $CONFIG = array (
        'overwriteprotocol' => 'https',
        'overwritehost' => 'nextcloud.seyzahl.com',
        'overwrite.cli.url' => 'https://nextcloud.seyzahl.com',
        'trusted_domains' => array(
          0 => 'nextcloud.seyzahl.com',
          1 => 'nextcloud',
        ),
        'trusted_proxies' => array(
          0 => '10.0.0.0/8',
          1 => '192.168.0.0/16',
        ),
        'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
      );
    postgres.config.php: |-
      <?php
      $CONFIG = array (
        'dbtype' => 'pgsql',
        'dbhost' => 'nextcloud-pg.seyzahl.com',
        'dbport' => '5432',
        'dbname' => 'nextcloud',
        'dbuser' => 'nextcloud',
        'dbpassword' => getenv('POSTGRES_PASSWORD'),
        'dbtableprefix' => 'oc_',
      );
    redis.config.php: |-
      <?php
      $CONFIG = array (
        'memcache.local' => '\\OC\\Memcache\\APCu',
        'memcache.distributed' => '\\OC\\Memcache\\Redis',
        'memcache.locking' => '\\OC\\Memcache\\Redis',
        'redis' => array(
          'host' => getenv('REDIS_HOST'),
          'port' => (int) getenv('REDIS_HOST_PORT'),
          'password' => getenv('REDIS_HOST_PASSWORD'),
          'dbindex' => 0,
          'timeout' => 1.5,
        ),
      );

  extraEnv:
    - name: POSTGRES_HOST
      value: nextcloud-pg.seyzahl.com
    - name: POSTGRES_DB
      value: nextcloud
    - name: POSTGRES_USER
      value: nextcloud
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: nextcloud-db-creds
          key: password
    - name: NEXTCLOUD_ADMIN_USER
      valueFrom:
        secretKeyRef:
          name: nextcloud-admin-creds
          key: username  
    - name: NEXTCLOUD_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: nextcloud-admin-creds
          key: password
    - name: NEXTCLOUD_TRUSTED_DOMAINS
      value: nextcloud.seyzahl.com
    - name: REDIS_HOST
      value: nextcloud-redis-master
    - name: REDIS_HOST_PORT
      value: "6379"
    - name: REDIS_HOST_PASSWORD
      valueFrom:
        secretKeyRef:
          name: nextcloud-redis-creds
          key: redis-password

## Database Configuration - Using external PostgreSQL
internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql
  host: nextcloud-pg.seyzahl.com
  port: 5432
  user: nextcloud
  password: ""
  database: nextcloud
  existingSecret:
    enabled: true
    secretName: nextcloud-db-creds
    usernameKey: username
    passwordKey: password

## Persistence
# persistence:
#   enabled: true
#   existingClaim: nextcloud-pvc-nfs
#   subPath: "html"  # Nextcloud application files
#   nextcloudData:
#     enabled: true
#     existingClaim: nextcloud-pvc-nfs
#     subPath: "data"  # User data files (uploads, etc.)
#
# podSecurityContext:
#   fsGroup: 33        # www-data group (standard for Nextcloud)
#   runAsUser: 33      # www-data user
#   runAsGroup: 33
#
# securityContext:
#   runAsUser: 33
#   runAsGroup: 33
#   allowPrivilegeEscalation: false
#   readOnlyRootFilesystem: false
#   runAsNonRoot: true
# Temporarily disable ALL persistence to test if volumes are the issue
persistence:
  enabled: false

nextcloudData:
  enabled: false

# Keep everything else the same
podSecurityContext:
  fsGroup: 33
  runAsUser: 33
  runAsGroup: 33

securityContext:
  runAsUser: 33
  runAsGroup: 33
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true

## Redis Configuration with Authentication
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    existingSecret: nextcloud-redis-creds
    existingSecretPasswordKey: redis-password
  master:
    persistence:
      enabled: true
      size: 2Gi
      storageClass: truenas-nfs
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m
  replica:
    replicaCount: 0  # Standalone mode for homelab
  metrics:
    enabled: false  # Enable if you have Prometheus

## Cronjob for background tasks
cronjob:
  enabled: true
  schedule: "*/15 * * * *"  # Every 15 minutes

## Service configuration
service:
  type: ClusterIP
  port: 8080

## Resource limits
resources:
  requests:
    cpu: 500m
    memory: 2Gi
  limits:
    cpu: 4
    memory: 8Gi

## Probes
livenessProbe:
  enabled: true
  initialDelaySeconds: 90
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  enabled: true
  initialDelaySeconds: 90
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 30

## HPA
hpa:
  enabled: false
  cputhreshold: 60
  minPods: 1
  maxPods: 10

## Don't use Bitnami PostgreSQL/MariaDB
postgresql:
  enabled: false
  
mariadb:
  enabled: false
