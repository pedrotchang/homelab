apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 2
  template:
    metadata:
      labels:
        app: cloudflared
        policy-type: "app"
    spec:
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest 
        args:
        - tunnel
        - --config
        - /etc/cloudflared/config/config.yaml
        - --protocol
        - http2
        - run
        livenessProbe:
          httpGet:
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10

        ports:
          - containerPort: 2000
            name: http-metrics

        volumeMounts:
          - name: config
            mountPath: /etc/cloudflared/config
            readOnly: true
          - name: creds
            mountPath: /etc/cloudflared/creds
            readOnly: true
 
      restartPolicy: Always

      volumes:
        - name: creds
          secret:
            secretName: cloudflare-tunnel
        - name: config
          configMap:
            name: cloudflared
            items:
            - key: config.yaml
              path: config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared
data:
  config.yaml: |
    tunnel: wallabag
    credentials-file: /etc/cloudflared/creds/credentials.json

    metrics: 0.0.0.0:2000

    no-autoupdate: true

    ingress:
    - hostname: wallabag.seyzahl.com
      service: http://wallabag:8083

    - hostname: hello.example.com
      service: hello_world
    - service: http_status:404
